//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17929.
// 
#pragma warning disable 1591

namespace K2SMS.SMSAdmin {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AccountServiceNoHeaderSoap", Namespace="com.esendex.ems.soapinterface")]
    public partial class AccountServiceNoHeader : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetMessageLimitOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSentMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountFeaturesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountStateOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AccountServiceNoHeader() {
            this.Url = global::K2SMS.Properties.Settings.Default.K2SMS_SMSAdmin_AccountServiceNoHeader;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetMessageLimitCompletedEventHandler GetMessageLimitCompleted;
        
        /// <remarks/>
        public event GetSentMessagesCompletedEventHandler GetSentMessagesCompleted;
        
        /// <remarks/>
        public event GetAccountFeaturesCompletedEventHandler GetAccountFeaturesCompleted;
        
        /// <remarks/>
        public event GetAccountStateCompletedEventHandler GetAccountStateCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("com.esendex.ems.soapinterface/GetMessageLimit", RequestNamespace="com.esendex.ems.soapinterface", ResponseNamespace="com.esendex.ems.soapinterface", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetMessageLimit(string username, string password, string account) {
            object[] results = this.Invoke("GetMessageLimit", new object[] {
                        username,
                        password,
                        account});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetMessageLimitAsync(string username, string password, string account) {
            this.GetMessageLimitAsync(username, password, account, null);
        }
        
        /// <remarks/>
        public void GetMessageLimitAsync(string username, string password, string account, object userState) {
            if ((this.GetMessageLimitOperationCompleted == null)) {
                this.GetMessageLimitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessageLimitOperationCompleted);
            }
            this.InvokeAsync("GetMessageLimit", new object[] {
                        username,
                        password,
                        account}, this.GetMessageLimitOperationCompleted, userState);
        }
        
        private void OnGetMessageLimitOperationCompleted(object arg) {
            if ((this.GetMessageLimitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessageLimitCompleted(this, new GetMessageLimitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("com.esendex.ems.soapinterface/GetSentMessages", RequestNamespace="com.esendex.ems.soapinterface", ResponseNamespace="com.esendex.ems.soapinterface", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public message[] GetSentMessages(string username, string password, string account, int year, int month) {
            object[] results = this.Invoke("GetSentMessages", new object[] {
                        username,
                        password,
                        account,
                        year,
                        month});
            return ((message[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSentMessagesAsync(string username, string password, string account, int year, int month) {
            this.GetSentMessagesAsync(username, password, account, year, month, null);
        }
        
        /// <remarks/>
        public void GetSentMessagesAsync(string username, string password, string account, int year, int month, object userState) {
            if ((this.GetSentMessagesOperationCompleted == null)) {
                this.GetSentMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSentMessagesOperationCompleted);
            }
            this.InvokeAsync("GetSentMessages", new object[] {
                        username,
                        password,
                        account,
                        year,
                        month}, this.GetSentMessagesOperationCompleted, userState);
        }
        
        private void OnGetSentMessagesOperationCompleted(object arg) {
            if ((this.GetSentMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSentMessagesCompleted(this, new GetSentMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("com.esendex.ems.soapinterface/GetAccountFeatures", RequestNamespace="com.esendex.ems.soapinterface", ResponseNamespace="com.esendex.ems.soapinterface", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AccountFeature GetAccountFeatures(string username, string password, string account) {
            object[] results = this.Invoke("GetAccountFeatures", new object[] {
                        username,
                        password,
                        account});
            return ((AccountFeature)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountFeaturesAsync(string username, string password, string account) {
            this.GetAccountFeaturesAsync(username, password, account, null);
        }
        
        /// <remarks/>
        public void GetAccountFeaturesAsync(string username, string password, string account, object userState) {
            if ((this.GetAccountFeaturesOperationCompleted == null)) {
                this.GetAccountFeaturesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountFeaturesOperationCompleted);
            }
            this.InvokeAsync("GetAccountFeatures", new object[] {
                        username,
                        password,
                        account}, this.GetAccountFeaturesOperationCompleted, userState);
        }
        
        private void OnGetAccountFeaturesOperationCompleted(object arg) {
            if ((this.GetAccountFeaturesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountFeaturesCompleted(this, new GetAccountFeaturesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("com.esendex.ems.soapinterface/GetAccountState", RequestNamespace="com.esendex.ems.soapinterface", ResponseNamespace="com.esendex.ems.soapinterface", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AccountState GetAccountState(string username, string password, string account) {
            object[] results = this.Invoke("GetAccountState", new object[] {
                        username,
                        password,
                        account});
            return ((AccountState)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountStateAsync(string username, string password, string account) {
            this.GetAccountStateAsync(username, password, account, null);
        }
        
        /// <remarks/>
        public void GetAccountStateAsync(string username, string password, string account, object userState) {
            if ((this.GetAccountStateOperationCompleted == null)) {
                this.GetAccountStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountStateOperationCompleted);
            }
            this.InvokeAsync("GetAccountState", new object[] {
                        username,
                        password,
                        account}, this.GetAccountStateOperationCompleted, userState);
        }
        
        private void OnGetAccountStateOperationCompleted(object arg) {
            if ((this.GetAccountStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountStateCompleted(this, new GetAccountStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.esendex.ems.soapinterface")]
    public partial class message {
        
        private string idField;
        
        private string originatorField;
        
        private string recipientField;
        
        private string bodyField;
        
        private System.DateTime sentatField;
        
        private System.DateTime receivedatField;
        
        private MessageType typeField;
        
        private MessageStatusCode statusField;
        
        private string usernameField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string originator {
            get {
                return this.originatorField;
            }
            set {
                this.originatorField = value;
            }
        }
        
        /// <remarks/>
        public string recipient {
            get {
                return this.recipientField;
            }
            set {
                this.recipientField = value;
            }
        }
        
        /// <remarks/>
        public string body {
            get {
                return this.bodyField;
            }
            set {
                this.bodyField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime sentat {
            get {
                return this.sentatField;
            }
            set {
                this.sentatField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime receivedat {
            get {
                return this.receivedatField;
            }
            set {
                this.receivedatField = value;
            }
        }
        
        /// <remarks/>
        public MessageType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public MessageStatusCode status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.esendex.ems.soapinterface")]
    public enum MessageType {
        
        /// <remarks/>
        Text,
        
        /// <remarks/>
        Binary,
        
        /// <remarks/>
        SmartMessage,
        
        /// <remarks/>
        Unicode,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.esendex.ems.soapinterface")]
    public enum MessageStatusCode {
        
        /// <remarks/>
        Queued,
        
        /// <remarks/>
        Sent,
        
        /// <remarks/>
        Delivered,
        
        /// <remarks/>
        Failed,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.esendex.ems.soapinterface")]
    public partial class AccountState {
        
        private string idField;
        
        private string referenceField;
        
        private string addressField;
        
        private string serviceAliasField;
        
        private int messageLimitField;
        
        private AccountFeature featuresField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Reference {
            get {
                return this.referenceField;
            }
            set {
                this.referenceField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string ServiceAlias {
            get {
                return this.serviceAliasField;
            }
            set {
                this.serviceAliasField = value;
            }
        }
        
        /// <remarks/>
        public int MessageLimit {
            get {
                return this.messageLimitField;
            }
            set {
                this.messageLimitField = value;
            }
        }
        
        /// <remarks/>
        public AccountFeature Features {
            get {
                return this.featuresField;
            }
            set {
                this.featuresField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.FlagsAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.esendex.ems.soapinterface")]
    public enum AccountFeature {
        
        /// <remarks/>
        None = 1,
        
        /// <remarks/>
        ServiceAliasing = 2,
        
        /// <remarks/>
        Inbox = 4,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMessageLimitCompletedEventHandler(object sender, GetMessageLimitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessageLimitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessageLimitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSentMessagesCompletedEventHandler(object sender, GetSentMessagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSentMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSentMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public message[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((message[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAccountFeaturesCompletedEventHandler(object sender, GetAccountFeaturesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountFeaturesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountFeaturesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccountFeature Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountFeature)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAccountStateCompletedEventHandler(object sender, GetAccountStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccountState Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountState)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591